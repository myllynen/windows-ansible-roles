---
- name: Configure Windows
  hosts: all
  become: false
  gather_facts: false
  collections:
    - myllynen.windows_ansible_roles
  vars:
    #
    # Ansible WinRM configuration
    #
    #ansible_connection: winrm
    #ansible_pipelining: true
    #ansible_winrm_port: 5985
    #ansible_winrm_scheme: http
    #ansible_winrm_transport: ntlm
    #ansible_winrm_message_encryption: always
    #ansible_winrm_server_cert_validation: ignore

    #ansible_winrm_user: Administrator
    #ansible_winrm_password: Foobar_12

    #
    # Ansible psrp configuration
    #
    ansible_connection: psrp
    ansible_pipelining: true
    ansible_psrp_port: 5985
    ansible_psrp_protocol: http
    ansible_psrp_auth: ntlm
    ansible_psrp_message_encryption: always
    ansible_psrp_cert_validation: ignore

    ansible_psrp_user: Administrator
    ansible_winrm_password: Foobar_12

    #
    # Ansible Windows/SSH configuration
    #
    #ansible_user: Administrator
    #ansible_password: Foobar_12
    #ansible_shell_type: powershell
    #ansible_ssh_common_args: -o GSSAPIDelegateCredentials=yes

    #
    # Common Windows connection parameters
    #
    ansible_become_method: runas
    #ansible_become_user: Administrator

    #
    # accounts_local
    #
    # Enable or disable built-in Administrator
    accounts_local_administrator_enable: true

    # Enable or disable Ansible user password expiration
    accounts_local_ansible_user_password_expires: false

    # Show or hide Ansible user on Welcome Screen
    accounts_local_ansible_user_show_on_welcome: false


    # List of user profiles to delete
    # NB. Removes all matching profiles
    accounts_local_profiles_delete:
    #  - testuser
    #  - S-1-5-21-...-1000

    # List of local users to delete
    accounts_local_users_delete:
    #  - testuser

    # List of local groups to delete
    accounts_local_groups_delete:
    #  - testgroup

    # List of local groups to create
    # Mandatory parameters: name
    accounts_local_groups_create:
    #  - name: testgroup
    #    description: Test Group

    # List of local users to create
    # Mandatory parameters: name
    # All users should be added to Users
    accounts_local_users_create:
    #  - name: testuser
    #    fullname: Test User
    #    description: User for testing
    #    password: Foobar_12
    #    password_expired: false
    #    password_never_expires: true
    #    user_cannot_change_password: false
    #    groups_action: add
    #    groups:
    #      - Users
    #    account_disabled: false
    #    account_expires: never
    #    account_locked: false
    #    login_script: C:\Users\login.ps1
    #    home_directory: C:\Users\testuser

    # Value for no_log parameter when setting passwords
    accounts_local_no_log: true

    # List of local group memberships to configure
    # Mandatory parameters: name, members, state
    # Set state to pure to make membership explicit
    accounts_local_group_members:
    #  - name: testgroup
    #    members:
    #      - testuser
    #    state: pure

    # List of local rights settings to configure
    # Mandatory parameters: name, users, action
    accounts_local_users_rights:
    #  - name: SeCreateSymbolicLinkPrivilege
    #    users:
    #      - testuser
    #    action: remove

    # List of user profiles to create
    # Mandatory parameters: username
    accounts_local_profiles_create:
    #  - username: testuser
    #    name: test-testuser

    #
    # boot_configuration
    #
    boot_configuration_timeout: 30

    #
    # dns_client
    #
    # List of DNS client configurations
    dns_client_configurations:
    #  - adapter_names: '*'
    #    dns_servers:
    #      - 1.1.1.1
    #      - 8.8.8.8
    #    suffix_search_list:
    #      - contoso.com
    #      - example.com

    #
    # dotnet_optimize
    #
    # Compile PowerShell assemblies
    # used with Ansible connections
    dotnet_optimize_powershell: true

    # Compile all installed assemblies
    dotnet_optimize_all_assemblies: false

    #
    # dsc_settings
    #
    # DSC settings to apply with ansible.windows.win_dsc
    # Set inject_facts_as_vars = False to avoid warnings
    # Each setting requires: setting, resource_name, parameters
    # Optional: reboot (true/false, defaults to false if omitted)
    dsc_settings:
    #  - setting: Create C:\Temp
    #    resource_name: File
    #    parameters:
    #      DestinationPath: C:\Temp
    #      Type: Directory
    #      Ensure: Present
    #
    #  - setting: Allow full admin privileges for local admins over WinRM
    #    resource_name: Registry
    #    parameters:
    #      Key: HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System
    #      ValueName: LocalAccountTokenFilterPolicy
    #      ValueType: DWord
    #      ValueData: 1
    #      Ensure: Present
    #
    #  - setting: Enable User Account Control (UAC)
    #    resource_name: Registry
    #    parameters:
    #      Key: HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System
    #      ValueName: EnableLUA
    #      ValueType: DWord
    #      ValueData: 1
    #      Ensure: Present
    #    reboot: true
    #
    #  - setting: Set WER local crash dump folder
    #    resource_name: Registry
    #    parameters:
    #      Key: HKLM:\SOFTWARE\Microsoft\Windows\Windows Error Reporting\LocalDumps
    #      ValueName: DumpFolder
    #      ValueType: ExpandString
    #      ValueData: '%LOCALAPPDATA%\CrashDumps'
    #      Ensure: Present
    #
    #  - setting: Set WER local crash dump count
    #    resource_name: Registry
    #    parameters:
    #      Key: HKLM:\SOFTWARE\Microsoft\Windows\Windows Error Reporting\LocalDumps
    #      ValueName: DumpCount
    #      ValueType: DWord
    #      ValueData: 10
    #      Ensure: Present
    #
    #  - setting: Set WER local crash dump type
    #    resource_name: Registry
    #    parameters:
    #      Key: HKLM:\SOFTWARE\Microsoft\Windows\Windows Error Reporting\LocalDumps
    #      ValueName: DumpType
    #      ValueType: DWord
    #      ValueData: 1
    #      Ensure: Present
    #
    #  - setting: Enable new network location wizard
    #    resource_name: Registry
    #    parameters:
    #      Key: HKLM:\SYSTEM\CurrentControlSet\Control\Network
    #      ValueName: NewNetworkWindowOff
    #      Ensure: Absent

    # Reboot after DSC changes
    # Action depends on per-setting "reboot: true"
    dsc_settings_reboot: true

    #
    # environment_settings
    #
    # Path environment settings to configure
    # Each setting requires: scope, name, elements, state
    # Optional: reboot (true/false, defaults to false if omitted)
    environment_settings_paths:
    #  # These are for connecting user only
    #  - scope: user
    #    name: CLASSPATH
    #    elements: C:\Java
    #    state: present
    #  - scope: user
    #    name: CLASSPATH
    #    elements: C:\OldJava
    #    state: absent
    #
    #  # These are for all users
    #  - scope: machine
    #    name: PATH
    #    elements: C:\Tools\bin
    #    state: present
    #
    #  # Reboot if updated and environment_settings_reboot is true
    #  - scope: machine
    #    name: PATH
    #    elements:
    #      - C:\Dangerous\bin
    #      - C:\Migration\bin
    #    state: absent
    #    reboot: true

    # Environment variable settings to configure
    # Each setting requires: level, variables
    # Optional: reboot (true/false, defaults to false if omitted)
    environment_settings_variables:
    #  # These are for connecting user only
    #  - level: user
    #    variables:
    #      ThisIsRemoved: ''
    #      SomeVariable: SomeValue
    #
    #  # These are for all users
    #  - level: machine
    #    variables:
    #      TestVariable: Test value
    #
    #  # Reboot if updated and environment_settings_reboot is true
    #  - level: machine
    #    variables:
    #      VIV: VeryImportantValue
    #    reboot: true

    # Reboot after environment setting changes
    # Action depends on per-setting "reboot: true"
    environment_settings_reboot: true

    #
    # etc_hosts
    #
    #etc_hosts_header: - omitted here for brevity

    # Add entry for host itself based on Ansible facts
    # This will use the first IP address found in system
    # This should be disabled when not using static IP
    etc_hosts_self_add: false

    # Force domain name used in host self entry
    # If unset defaults to ansible_facts.domain
    # Required if ansible_facts.domain is empty
    etc_hosts_self_domain:

    # List of lines to add to /etc/hosts
    # NB. Other entries will be removed
    etc_hosts_entries:
    #  - 192.168.122.1    gateway.example.com gateway
    #  - 192.168.122.150  bastion.example.com bastion

    # /etc/hosts entries to omit
    # none - do not omit entries
    # ipv4 - omit all IPv4 entries
    # ipv6 - omit all IPv6 entries
    etc_hosts_omit_entries: none

    # files_{acl,copy,create,fetch,get,remove} - omitted here for brevity

    #
    # network_configuration
    #
    # Enable or disable IPv6
    network_configuration_ipv6_enable: true

    # Enable or disable LMHOSTS lookup
    network_configuration_lmhosts_enable: true

    # Enable or disable NetBIOS
    network_configuration_netbios_enable: true

    # Reboot after IPv6/NetBIOS changes
    network_configuration_reboot: true

    # Static route configuration
    # Each setting requires: destination, state
    # When state is present also required: gateway, metric
    network_configuration_routes:
    #  - destination: 192.168.123.123/32
    #    gateway: 192.168.1.1
    #    metric: 1
    #    state: present
    #  - destination: 192.168.123.231/32
    #    state: absent

    #
    # packages_chocolatey
    #
    # Parameters for Chocolatey installation
    packages_chocolatey_update: true
    packages_chocolatey_package_params:
    packages_chocolatey_bootstrap_script:
    packages_chocolatey_validate_certs: true

    # Parameters to apply with win_chocolatey_source
    packages_chocolatey_source:
    #  - name: chocolatey
    #    state: absent
    #
    #  - name: intranet repo
    #    state: present
    #    source: http://example.com/choco

    # Parameters for Chocolatey configuration and features
    # Items with value or state present/absent are set with
    # win_chocolatey_config, rest with win_chocolatey_feature
    # See https://docs.chocolatey.org/en-us/configuration/
    packages_chocolatey_settings:
    #  - name: cacheLocation
    #    state: present
    #    value: C:\Temp\choco
    #
    #  - name: checksumFiles
    #    state: enabled
    #
    #  - name: logWithoutColor
    #    state: enabled
    #
    #  - name: webRequestTimeoutSeconds
    #    state: present
    #    value: 10

    # Parameters for package operations
    packages_chocolatey_install_allow_prerelease: false
    packages_chocolatey_install_ignore_dependencies: false
    packages_chocolater_update_packages: true
    packages_chocolatey_remove_deps: false

    # Chocolatey packages to install
    packages_chocolatey_install:
    #  - git
    #  - less
    #  - nano
    #  - vim

    # Chocolatey packages to remove
    packages_chocolatey_remove:
    #  - emacs

    #
    # performance_tuning
    #
    # NTFS Last Access Time updates
    ntfs_last_access_time_update: false

    # Page file configuration
    # auto      - automatically managed
    # disabled  - page file fully disabled
    # size      - static page file size in MB
    # system    - system managed page file size
    page_file_size: auto
    page_file_disk: C

    # Reboot after page file change
    page_file_reboot: true

    # Power scheme configuration
    # balanced          - balance between performance and energy use
    # power_saver       - max energy savings at the cost of performance
    # high_performance  - maximum performance with higher energy use
    power_scheme: high_performance

    #
    # rdp_configuration
    #
    # Enable or disable RDP
    rdp_configuration_enable: true

    # Firewall profiles to apply rules
    rdp_configuration_firewall_profiles:
      - domain
      - private

    # Require authentication for RDP
    rdp_configuration_authenticate: true

    #
    # registry_settings
    #
    # For user-specific settings see user_settings

    # Registry settings to apply with ansible.windows.win_regedit
    registry_settings:
    #  - setting: Allow full admin privileges for local admins over WinRM
    #    path: HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System
    #    name: LocalAccountTokenFilterPolicy
    #    type: DWord
    #    data: 1
    #
    #  - setting: Enable User Account Control (UAC)
    #    path: HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System
    #    name: EnableLUA
    #    type: DWord
    #    data: 1
    #    reboot: true
    #
    #  - setting: Set WER local crash dump folder
    #    path: HKLM:\SOFTWARE\Microsoft\Windows\Windows Error Reporting\LocalDumps
    #    name: DumpFolder
    #    type: ExpandString
    #    data: '%LOCALAPPDATA%\CrashDumps'
    #
    #  - setting: Set WER local crash dump count
    #    path: HKLM:\SOFTWARE\Microsoft\Windows\Windows Error Reporting\LocalDumps
    #    name: DumpCount
    #    type: DWord
    #    data: 10
    #
    #  - setting: Set WER local crash dump type
    #    path: HKLM:\SOFTWARE\Microsoft\Windows\Windows Error Reporting\LocalDumps
    #    name: DumpType
    #    type: DWord
    #    data: 1
    #
    #  - setting: Enable new network location wizard
    #    path: HKLM:\SYSTEM\CurrentControlSet\Control\Network\NewNetworkWindowOff
    #    state: absent

    # Reboot after registry changes
    # Action depends on per-setting "reboot: true"
    registry_settings_reboot: true

    #
    # services_enablement
    #
    service_enablement_disable:
      - WbioSrvc

    service_enablement_enable:

    #
    # service_recovery_options
    #
    service_recovery_options:
      - name: SNMPTRAP
        actions:
          - delay_ms: 30000
            type: restart
          - delay_ms: 30000
            type: restart
          - delay_ms: 60000
            type: reboot

    #
    # sshd_configuration
    #
    # Enable or disable sshd
    sshd_configuration_enable: true

    # Install OpenSSH.Server capability if needed
    # Skipping this will speedup the role a little
    # if sshd is already installed but the role is
    # going to fail in case sshd is not installed.
    # This is not needed with Windows Server 2025.
    sshd_configuration_install: false

    # sshd service start mode: auto or delayed
    sshd_configuration_start_mode: auto

    # Default shell for sshd, this must be kept in
    # sync with ansible_shell_type to avoid errors
    # NB. Needs an absolute path
    # For cmd.exe the path is: C:\Windows\System32\cmd.exe
    # For PowerShell must use: C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe
    sshd_configuration_shell:

    # Administrators SSH keys to add/remove
    sshd_configuration_admins_keys:
    #  absent:
    #    - ssh-rsa ... id_rsa.pub
    #  present:
    #    - ssh-ed25519 ... id_ed25519.pub

    # Firewall profiles to apply rules
    sshd_configuration_firewall_profiles:
      - domain
      - private
      - public

    # Enable sshd_config validatiion using a copy if
    # the file is about to be updated. Recommended.
    # NB. Works only after sshd has been started once
    # NB. The temp copy will be updated in check mode
    sshd_configuration_config_validate: true

    # sshd configuration file template to use
    # This is mutually exclusive with the options below
    # Role provided alternatives:
    # * default_config - OpenSSH.Server 0.0.1.0 default
    sshd_configuration_config_file:

    # These options will be explicitly set in sshd_config,
    # no other options will be left in place after update.
    # The example set below matches OpenSSH.Server 0.0.1.0
    # and additionally also enables GSSAPI authentication.
    sshd_configuration_options:
    #  AuthorizedKeysFile: .ssh/authorized_keys
    #  GSSAPIAuthentication yes
    #  Subsystem: sftp sftp-server.exe
    #  AllowGroups: administrators "openssh users"
    #  Match Group administrators:
    #    - AuthorizedKeysFile __PROGRAMDATA__/ssh/administrators_authorized_keys

    #
    # system_description
    #
    # System description to be configured in the system
    #
    # Use the empty string ("") to clear the current value
    #system_description_organization: Test Department
    #system_description_owner: Test Project ABC
    #system_description_description: Test VM 1234

    #
    # system_hostname
    #
    # System hostname to be configured in the system
    #
    # Should be short name (not FQDN) and valid for DNS
    system_hostname: "{{ ansible_facts.hostname | upper }}"

    # Reboot after system hostname change
    system_hostname_reboot: true

    #
    # system_init
    #
    # Log system initialization message on a fresh system

    # System initialization file
    system_init_file: C:\Windows\init_info_system.txt

    # System initialization message
    system_init_msg_file: "This system was initialized by system_init on {{ '%Y-%m-%d %H:%M:%S %Z' | strftime }}.\r\n"
    system_init_msg_log: "{{ system_init_msg_file }}"

    # Actions to take after initialization
    # reboot - reboot after initialization
    # syslog - write message to system log
    system_init_final_actions:
      - syslog

    #
    # system_locale
    #
    # NB. Configuring keyboard for Welcome Screen is notoriously difficult, this
    # role may or may not work reliably for that depending on the Windows version

    # https://docs.microsoft.com/windows/win32/intl/table-of-geographical-locations
    system_locale_location: 77

    system_locale_system: en-US
    system_locale_ui: en-US
    system_locale_user: en-US
    # A list of locale names (en-US;fi-FI) or hex code pairs (0409:0000040B;en-US)
    system_locale_input: 0409:0000040B

    # Force updating Welcome screen settings even if locale config was not changed
    system_locale_welcome_screen_update_always: false

    # Reboot after locale changes
    system_locale_reboot: true

    #
    # system_reboot
    #
    system_reboot_timeout: 600.0

    system_reboot_delay_pre: 2.0
    system_reboot_delay_post: 0.0

    system_reboot_message: Reboot initiated by Ansible

    #
    # system_time
    #
    system_time_ntp_servers:
      - time.windows.com

    system_time_timezone: FLE Standard Time

    # Reboot after timezone change
    system_time_timezone_reboot: true

    #
    # system_update
    #
    # Retry attempts and delay between retries
    # for applying updates in case of failures
    system_update_retry_count: 3
    system_update_retry_delay: 30

    # Retry applying updates also if updates were
    # installed, subject to the above retry count
    system_update_retry_after_install: true

    # Parameters for win_updates
    system_update_categories: '*'
    system_update_accept_list: []
    system_update_reject_list: []
    system_update_skip_optional: true
    system_update_state: installed

    # Display update results, full or compact
    system_update_display_results: true
    system_update_display_results_full: true

    # Reboot if needed after updates
    system_update_reboot: true
    system_update_reboot_timeout: 1200

    # Compile all installed assemblies
    # This will happen only after updates
    system_update_compile_assemblies: true

    # Trigger compilation only when updates with
    # the following description were part of the
    # installed updates. Use '.*' for everything.
    system_update_compile_filter: Cumulative Update

    #
    # user_experience
    #
    # Open Server Manager at logon
    user_experience_server_manager_at_logon: true

    # Enable or disable new network location wizard
    user_experience_network_location_wizard: false

    # Show or hide last user name on Welcome Screen
    user_experience_show_last_user_name: true

    #
    # user_settings
    #
    # For system-wide settings see registry_settings

    # Some settings may apply only after relogin
    user_settings_apply_to_logged_in_users: true

    # User settings to apply with ansible.windows.win_regedit
    user_settings_registry:
    #  - setting: Minimize Visual Effects for Performance
    #    path: HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\VisualEffects
    #    name: VisualFXSetting
    #    type: DWord
    #    data: 2
    #
    #  - setting: Disable Taskbar Animations
    #    path: HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\Advanced
    #    name: TaskbarAnimations
    #    type: DWord
    #    data: 0

    #
    # windows_recovery
    #
    # Enable or disable Windows Recovery Environment
    windows_recovery_enable: false

    #
    # winrm_configuration
    #
    # Enable or disable WinRM
    winrm_configuration_enable: true

    # WinRM service start mode: auto or delayed
    winrm_configuration_start_mode: auto

    # Optionally block WinRM HTTP port if using HTTPS
    # NB. Kerberos and NTLM encrypt traffic with HTTP
    winrm_configuration_http_block: false

    # Enable WinRM HTTPS listener, creates a self-signed
    # cert if WinRM HTTPS listener is not yet configured
    winrm_configuration_https_enable: false

    # WinRM service configuration
    # CBT is None, Relaxed, or Strict
    winrm_configuration_service_config:
      AllowUnencrypted: false
      Auth:
        Basic: false
        Kerberos: true
        Negotiate: true
        Certificate: false
        CredSSP: false
        CbtHardeningLevel: Strict
      IPv4Filter: '*'
      IPv6Filter: '*'

    # Firewall profiles to apply rules
    winrm_configuration_firewall_profiles:
      - domain
      - private
      - public

    # Optionally display current configuration
    winrm_configuration_display_config: false

    #
    # wsl_configuration
    #
    # Enable or disable WSL
    # Requires Windows Server 2022+
    # NB. Distros are for the connecting user
    # Disabling WSL will uninstall all currently
    # installed distributions and the WSL feature
    # Set to null to leave the current setup untouched
    wsl_configuration_enable: true

    # Update WSL during configuration
    # NB. This task does not support check mode,
    #     if enabled update is always attempted.
    wsl_configuration_update: false

    # Config file template to install as %USERPROFILE%\.wslconfig
    # Role provided alternatives:
    # * disable_cgroup_v1  - disable cgroup v1 completely
    wsl_configuration_config_file:

    # Reboot after WSL install or uninstall
    # NB. Reboot is mandatory to complete un/install
    #     and later steps will fail before rebooting
    wsl_configuration_reboot: true

    # List of distributions to install
    # See wsl.exe --list --online for alternatives
    wsl_configuration_distributions:
    #  - FedoraLinux-42

    # Remove distributions not listed above
    wsl_configuration_distributions_exclusive: false

    # Default WSL distribution
    wsl_configuration_distribution_default:

    # List of distributions to update
    # NB. This task does not support check mode, so
    #     if enabled an update is always attempted.
    wsl_configuration_distributions_update: "{{ wsl_configuration_distributions }}"

    # Update commands for each distribution variant
    # Patterns are case-insensitive, first match will be used
    # wsl_configuration_distribution_update_commands defaults ..
    #  .. omitted here for brevity

  roles:
    - dotnet_optimize
    - system_hostname
    - etc_hosts
    - dns_client
    - system_time
    #- system_update
    - system_locale
    - accounts_local
    - boot_configuration
    - network_configuration
    - winrm_configuration
    - sshd_configuration
    - rdp_configuration
    #- wsl_configuration
    #- windows_recovery
    - dsc_settings
    - registry_settings
    - environment_settings
    #- packages_chocolatey
    - performance_tuning
    #- service_enablement
    #- service_recovery
    - user_experience
    - user_settings
    #- system_reboot
    - system_init
