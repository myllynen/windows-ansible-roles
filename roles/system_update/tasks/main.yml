---
- name: Include tasks to install updates
  ansible.builtin.include_tasks:
    file: update.yml
  loop: "{{ range(1, system_update_retry_count | int + 1) | list }}"
  loop_control:
    loop_var: update_attempt

- name: Record final update results
  ansible.builtin.set_fact:
    system_update_updates:
      changed: "{{ true if update_combined.updates | length > 0 else false }}"
      failed: "{{ update_install.failed }}"
      failed_update_count: "{{ update_install.failed_update_count }}"
      filtered_updates: "{{ update_install.filtered_updates }}"
      found_update_count: "{{ update_install.found_update_count }}"
      installed_update_count: "{{ update_combined.updates | length }}"
      reboot_required: "{{ update_install.reboot_required }}"
      rebooted: "{{ system_update_rebooted | default(false) }}"
      updates: "{{ update_combined.updates }}"

- name: Display update results
  vars:
    full_results: "{{ system_update_updates }}"
    compact_results: "{{ [] if 'updates' not in system_update_updates else
                         system_update_updates.updates.values() | map(attribute='title') }}"
    update_results: "{{ full_results if system_update_display_results_full | bool else compact_results }}"
  ansible.builtin.debug:
    var: update_results
  when: system_update_display_results | bool

- name: Fail if updating did not succeed
  ansible.builtin.fail:
    msg: "Failed to install updates."
  when: update_install is failed

- name: Include role to compile assemblies
  vars:
    filter: "{{ system_update_compile_filter }}"
    filtered: "{{ system_update_updates.updates | dict2items | selectattr('value.title', 'regex', filter) | length }}"
    dotnet_optimize_powershell: true
    dotnet_optimize_all_assemblies: true
  ansible.builtin.include_role:
    name: dotnet_optimize
  when:
    - system_update_compile_assemblies | bool
    - filtered | int > 0
